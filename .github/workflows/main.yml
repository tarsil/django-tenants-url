name: Build, Test and Publish

on:
  push:
    branches:
      - "**"
  schedule:
    - cron: "0 0 * * *"

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version:
          - "3.9"

    services:
      db:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: dtu_test_project
          POSTGRES_PASSWORD: root
          POSTGRES_USER: postgres
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Python version
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install Project dependencies
        run: |
          pip install -r requirements.txt
          python setup.py develop

      - name: Run tests
        run: |
          sudo apt install -y libmemcached-dev
          cd dtu_test_project
          python3 -m venv venv
          source ./venv/bin/activate
          pip install -r requirements.txt
          cd ..
          python setup.py develop
          cd dtu_test_project
          make test

      - if: always()
        name: Remove venv
        run: |
          rm -r dtu_test_project/venv

      - name: Install Python dependencies
        run: pip install wheel twine mkdocs-material

      - name: Build Python package
        run: python setup.py sdist bdist_wheel

      - if: ${{ github.ref == 'refs/heads/main' && 'main' || github.ref == 'refs/heads/develop' && 'develop' }}
        name: Upload to test pypi.
        run: twine upload --repository-url https://test.pypi.org/legacy/ -u ${{ secrets.TEST_PYPI_USER }} -p ${{ secrets.TEST_PYPI_PASSWORD }} --skip-existing dist/*.whl

      - if: ${{ github.ref == 'refs/heads/main' && 'main' || github.ref == 'refs/heads/develop' && 'develop' }}
        name: Upload to pypi.
        run: twine upload -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }} --skip-existing dist/*.whl
